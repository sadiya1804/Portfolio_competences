/* °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° partie compétences */
/* ici on veut travailler la police d'ecriture et l'emplacement du titre  */
h3{
    font-size: 35px ;
    font-family:'Montserrat' ;
    text-align: center;
    font-weight: bold;
    margin: 2%;

}
/* ici on veut toute la partie compétences ait un background de cette couleur */
.compétences{
    background-color:#EBEBEB;
    padding: 80px 0px 60px 0px;
}
/* ici on veut faire du grid sur un élément parent afin de pouvoir definir un "gap", un espacement entre les elements enfants, 
 on définit la taille qu'occupe cette partie sur l'écran et on définit l'emplacement des eléments enfants de ce container */
 main.conteneur-bloc{
    display: grid;
    margin-left: 200px;
    gap: 20px;
}
/*on veut definir la taille de cette section et aligner le texte et l'image horizontalement avec flex  */
 section.texte-img{ 
     height: 350px; 
     width: 150vh;
     display: flex;
     padding-top: 20px; 
     gap: 10px;
 }
 /* ici on veut donner cette couleur à notre texte et mettre une bordure arrondie au bloc et aligner tous nos éléments avec display flex et flex wrap */
  .texte {
    background-color: #ffffff;
    border-radius: 2rem;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    padding-top: 20px;
    box-shadow: 3px 3px 5px 0px rgb(0 0 0 / 16%);

} 
/* ici on veut donner une taille ^précise à notre image et definir son emplacemment par rapport au haut de la page */
.texte-img img{
    height: 160px;
    width: 150px;
    padding-top: 50px;
}

.texte-img img {
    position: relative;
    -webkit-transition: all 0.5s ease;
    transition: all 0.5s ease;
  }
   
  .texte-img :hover img {
    -webkit-transform: rotate(-15deg);
    transform: rotate(-15deg);
  } 
/* ici on veut travailler la police d'écriture ainsi que la couleur et l'emplacement par rapport à la droite de notre contenu */
span.detail-bloc{
    color: orangered;
    font-size:25px;
    font-family: monospace;
    display: flex;
    justify-content: flex-end;
}
/* ici on veut travailler sur l'emplacement par rapport au bas et à la gauche de notre page de notre entéte ainsi que l'espacement entre les lignes   */
.détail-entéte{
    font-size:18px;
    font-family: monospace;
    padding-left: 50px;
    padding-bottom: 50px;
    line-height: normal;
}
/* ici on veut ranger nos listes de telles sortes qu'ils occupent 2 lignes et soient séparaient par un gap, on veut aussi définir leur emplacement  */
.rangement{ 
    display: grid;
    grid-template-columns:1fr 1fr;
    gap: 30px;
    padding-bottom: 150px;

}
/* chaque élement enfant est contennu dans la premiere ou la 2e colonne du grid et possede la taille suivante */
.colonne{
grid-column: 1fr;
margin-right: 150px;
font-size: 18px;
list-style: none;
}
/* le rangement est différent car il occupe seulement une colonne et donc pas besoin de grid */
.rangement2{
    font-size: 18px;
    padding-bottom: 100px;
    line-height: 39px;
    list-style: none;
}
/* on met l'animation en position relative afin de pouvoir inserer une animaton sur cette partie, on met le nom de l'animation et sa durée */
#animation1{
     position: relative; 
     -webkit-animation-name: anime1;
      -webkit-animation-duration: 2s;
      -webkit-animation-iteration-count:initial;
}
/* ce webkit permet de définir les différentes étapes de l'animation à travers le temps et ainsi que le positionement du bloc pendant l'action */
@-webkit-keyframes anime1{
    0% {
        opacity: 0;
        left: -400px;
     }
     50%{
         left: 80px;
    
     }

    100% {
        left: 80px;
        opacity: 1;
      }
}
/* méme fonctionnement que celui du dessus mais dans le sens contraire */
#animation2{
    position: relative;
    -webkit-animation-name: anime2;
      -webkit-animation-duration: 2s;
      -webkit-animation-iteration-count:initial;

}
@-webkit-keyframes anime2{
    0% {
        opacity: 0;
        right: -400px;
     }
     50%{
         right: 80px;
       
     }

    100% {
        right: 80px;
        opacity: 1;
      }
}

.skills{
    display: flex;
    align-items: center;

}
.rating {
    font-size: 15px;
    justify-content: flex-end;
}

.clicked {
    color: rgba(71, 32, 187, 0.695);
}

@media (max-width: 786px) {
   
    section.texte-img{ 
        height: 190px; 
        width: 55vh;
        display: flex;
        padding-top: 0; 
        gap: 10px;
    }
     .texte-img img{
        height: 110px;
        width: 50px;
        padding-top: 50px;
    }
     .texte {
       font-size: 2px;
       background-color: #ffffff;
       border-radius: 2rem;
       display: flex;
       align-items:center;
       flex-wrap: wrap;
       padding-top: 10px;
       box-shadow: 3px 3px 5px 0px rgb(0 0 0 / 16%);
   
   } 
   main.conteneur-bloc{
      display: grid;
      margin-left: 30px;
      gap: 40px;
  }
 
   .rangement{ 
    display: grid;
    grid-template-columns:1fr 1fr;
    gap: 10px;
    padding-bottom: 0;

}
   .rangement2{
    font-size: 10px;
    padding-bottom: 100px;
    line-height: 15px;
    list-style: none;
    margin-left: 10px;
}
    .colonne{
       grid-column: 1fr;
       margin-right: 30px;
       font-size: 10px;
       list-style: none;
    }

    .rating {
        font-size: 7px;
        justify-content: flex-end;
    }
    span.detail-bloc{
        color: orangered;
        font-size:20px;
        font-family: monospace;
        display: flex;
        justify-content: flex-end;
    }
    .détail-entéte{
        font-size:10px;
        font-family: monospace;
        padding-left: 25px;
        padding-bottom: 10px;
        line-height: normal;
    }

}
